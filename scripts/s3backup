#!/bin/bash

set -e

print_error() {
  >&2 echo -e "$@"
}

fail() {
  local code=${2:-1}
  [[ -n $1 ]] && print_error "$1"
  # shellcheck disable=SC2086
  exit $code
}

run() {
  if [[ $DRYRUN == true ]]; then
    echo "$@"
  elif [[ $DEBUG == true ]]; then
    (set -x; "$@")
  else
    "$@"
  fi
}

# based on example from:
# https://unix.stackexchange.com/questions/82598/how-do-i-write-a-retry-logic-in-script-to-keep-retrying-to-run-it-upto-5-times/82610
retry() {
  local n=1
  local max=5
  local delay=15

  while true; do
    if "$@"; then
      break
    elif [[ $n -lt $max ]]; then
      ((n++))
      print_error "Command failed. Attempt $n/$max:"
      sleep $delay;
    else
      fail "The command has failed after $n attempts."
    fi
  done
}

# use UTC for timestamps
datecmd() {
  # shellcheck disable=SC2068
  run date --utc $@
}

check_vars() {
  local req_vars=(
    AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY
    S3_SRC_BUCKET
    S3_BACKUP_BUCKET
  )

  local opt_vars=(
    S3_SRC_PREFIX
    S3_BACKUP_PREFIX
    DRYRUN
  )

  local err
  for v in "${req_vars[@]}"; do
    [[ ! -v $v ]] && err="${err}Missing required env variable: ${v}\n"
  done

  [[ -n $err ]] && fail "$err"

  # FYI / non-fatal
  for v in "${opt_vars[@]}"; do
    [[ ! -v $v ]] && print_error "Missing optional env variable: ${v}"
  done

  # need explicit return status incase the last -z check returns 1
  return 0
}

backup_path() {
  year=$(datecmd +"%Y")
  mon=$(datecmd +"%m")
  day=$(datecmd +"%d")
  # date --utc --iso-8601=seconds uses the uglier +00:00 instead of Z
  iso8601=$(datecmd +"%Y-%m-%dT%H:%M:%SZ")

  echo "${year}/${mon}/${day}/${iso8601}"
}

# http://stackoverflow.com/questions/1527049/join-elements-of-an-array#17841619
join() { local IFS="$1"; shift; echo "$*"; }

check_vars
# shellcheck disable=SC2086
src="s3://$(join '/' $S3_SRC_BUCKET $S3_SRC_PREFIX)"
# shellcheck disable=SC2086
dst="s3://$(join '/' $S3_BACKUP_BUCKET $S3_BACKUP_PREFIX "$(backup_path)")"

retry run aws s3 sync "$src" "$dst"

# vim: tabstop=2 shiftwidth=2 expandtab
